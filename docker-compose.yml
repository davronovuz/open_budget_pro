services:
  pg_database:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: >
      postgres -c max_connections=150
               -c shared_buffers=512MB -c effective_cache_size=1536MB
               -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
               -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
               -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
               -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1
    env_file:
      - ".env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h ${DB_HOST} -p ${DB_PORT:-5432}"]
      interval: 5s
      timeout: 3s
      retries: 20
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  bot:
    image: "bot"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/bot"
    volumes:
      - .:/usr/src/app/bot
    # MUHIM: avval migratsiya, keyin bot
    command: sh -c "alembic upgrade head && python3 -m bot"
    restart: always
    env_file:
      - ".env"
    depends_on:
      pg_database:
        condition: service_healthy
    environment:
      BOT_ROOT: /infrastructure/database/models
      MODELS_MODULE: ${MODELS_MODULE:-models}

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  pgdata: {}
